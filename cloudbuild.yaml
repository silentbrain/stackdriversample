steps:
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['-m', 'cp', '-r', './*', 'gs://kty-test1/git/']
  id: 'gcs-copy'

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gcloud auth list
      gcloud compute instances list --format="csv(name,zone.basename(),status)" | grep RUNNING | grep kty- > /sc_vm_list/list.csv
  volumes:
  - name: 'sc_vm_list'
    path: '/sc_vm_list'
  id: 'list-vm'
  waitFor: ['gcs-copy']


- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      while IFS=',' read INSTANCE_NAME ZONE STATUS; 
do
 cat <<EOF > /sc_vm_list/deploy2.yaml
step:
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'ssh', 'pping@${INSTANCE_NAME}', '--zone', '${ZONE}', '--tunnel-through-iap', '--ssh-flag', '-p 10022', '--command', 'hostname']
  waitFor: ['init-ssh']
  id : 'deploy-${INSTANCE_NAME}'
EOF
done < /sc_vm_list/list.csv
  volumes:
  - name: 'sc_vm_list'
    path: '/sc_vm_list'
  id: 'make-deploy.yaml'
  waitFor: ['list-vm']

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - cat /sc_vm_list/deploy2.yaml
  volumes:
  - name: 'sc_vm_list'
    path: '/sc_vm_list'
  id: 'submit-deploy'
  waitFor: ['make-deploy.yaml']

